##############################
# Documentation forthcoming! #
##############################

job = "Roper"
#selection = "Roulette"
selection = "Tournament" # currently inefficient
#selection = "Metropolis"
mut_rate = 0.05
crossover_period = 2
crossover_rate = 1.0 # versus clone
max_init_len = 100
min_init_len = 10
pop_size = 2048
num_offspring = 2
num_parents = 2
target_fitness = 0
max_length = 100
num_epochs = 0 # = infinite
season_length = 100 # tweak
# add this:
is_fitness_dynamic = true

[fitness_weights]
# uses fasteval to evaluate weighting expressions
gadgets_executed = "10 - min(10, x)" #"-1 * min(3, x)"
register_error = "0"
genetic_freq = "0" #"min(2, x * 50)"
#mem_ratio_written = 
#crash_count = "x"
#zeroes = "x"
code_frequency = "10*x" #x/2"

[tournament]
tournament_size = 7
# todo: plot diversity and fitness wrt radius changes.
# maybe experiment with dynamic radius adjustments
# as a response to loss of diversity
geographic_radius = 15

[roulette]
# Should be a float greater than 0.0 and less than 1.0. The lower the value, the more elitist the selection.
weight_decay = 0.8

[hello]
target = "Mares eat oats and does eat oats and little lambs eat ivy."


[machine]
max_steps = 0x1000

[observer]
dump_population = false
dump_soup = true 
data_directory = "~/logs"
window_size  = 3000
report_every = 3000
dump_every = 10000

[data]
path = "./data/iris.tsv"
#path = "./data/square.tsv"
#path = "./data/agaricus-lepiota.tsv"

[roper]
#fitness_function = "register_conjunction" #"register_pattern"
fitness_function = "code_coverage"
arch = "X86"
mode = "MODE_64"
#gadget_file = "./gadgets/sh_soup.json"
soup_size = 0x10000
binary_path = "/bin/sh"
#binary_path = "/tmp/ldconfig"
num_workers = 41
num_emulators = 31
max_emu_steps = 0x100_000
millisecond_timeout = 500
emulator_stack_size = 0x1000
record_basic_blocks = true
record_memory_writes = true
output_registers = ["RBX", "RCX", "R10", "RDI", "RSI", "RSP", "RBP", "RIP", "RAX" ]
  [roper.register_pattern] 
#  RAX = "0x3b"                   # execve syscall number
#  RDI = "&'/bin/sh"
#  RSI = "&&0"                  # an empty argv array
